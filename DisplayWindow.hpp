#ifndef __DISPLAYWINDOW_HPP__
#define __DISPLAYWINDOW_HPP__

#include <atomic>
#include <thread>
#include <memory>

#include <QMainWindow>

#include "ScreenIO.hpp"

namespace Ui {
class DisplayWindow;
}

class QGLCanvas;
class QPushButton;

/// A simple starting point for a motion detection test program
class DisplayWindow final : public QMainWindow
{
	Q_OBJECT

public:
	explicit DisplayWindow(QWidget *parent = 0);

	~DisplayWindow();

private:
	Ui::DisplayWindow *ui; ///< The window, generated by Qt's UI file
	QGLCanvas* canvas; ///< The OpenGL canvas on which to draw images
	QPushButton* btnStart;
	std::atomic<bool> threadRunning; ///< Set to true when the video updating thread should exit
	std::unique_ptr<std::thread> playThread; ///< Reads from the video file and updates the displayed frame

	std::unique_ptr<ScreenIO> screenIO;

	void play(); ///< The procedure that runs inside the video update thread

private slots:

	void startClicked();
};

#endif // DISPLAYWINDOW_H
